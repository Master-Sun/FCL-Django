# Generated by Django 2.2.1 on 2019-05-02 21:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=30, verbose_name='姓名')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'verbose_name_plural': '员工信息表',
                'verbose_name': '员工信息表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(max_length=50, verbose_name='订单号')),
                ('add_date', models.DateField(auto_now=True, verbose_name='添加时间')),
            ],
            options={
                'db_table': 'order_list',
                'verbose_name_plural': '订单信息',
                'verbose_name': '订单信息',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=30, verbose_name='品名')),
                ('raw_material1', models.CharField(max_length=30, verbose_name='原料1')),
                ('raw_material2', models.CharField(max_length=30, verbose_name='原料2')),
                ('add_date', models.DateField(default=False, verbose_name='添加时间')),
            ],
            options={
                'db_table': 'product',
                'verbose_name_plural': '产品信息表',
                'verbose_name': '产品信息表',
            },
        ),
        migrations.CreateModel(
            name='Recode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_time', models.DateTimeField(default=False, verbose_name='比对时间')),
                ('result', models.BooleanField(default=True, verbose_name='比对结果')),
                ('raw_material1', models.CharField(default='', max_length=50, verbose_name='物料1')),
                ('raw_material2', models.CharField(default='', max_length=50, verbose_name='物料2')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Order_list', verbose_name='订单')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='生产员工')),
            ],
            options={
                'db_table': 'recode',
                'verbose_name_plural': '比对记录',
                'verbose_name': '比对记录',
            },
        ),
        migrations.AddField(
            model_name='order_list',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Product', verbose_name='品名'),
        ),
    ]
